" All system-wide defaults are set in $VIMRUNTIME/archlinux.vim (usually just
" /usr/share/vim/vimfiles/archlinux.vim) and sourced by the call to :runtime
" you can find below.  If you wish to change any of those settings, you should
" do it in this file (/etc/vimrc), since archlinux.vim will be overwritten
" everytime an upgrade of the vim packages is performed.  It is recommended to
" make changes after sourcing archlinux.vim since it alters the value of the
" 'compatible' option.

" This line should not be removed as it ensures that various options are
" properly set to work with the Vim-related packages.
runtime! archlinux.vim

" If you prefer the old-style vim functionalty, add 'runtime! vimrc_example.vim'
" Or better yet, read /usr/share/vim/vim80/vimrc_example.vim or the vim manual
" and configure vim to your own liking!

" do not load defaults if ~/.vimrc is missing
"let skip_defaults_vim=1

syntax on
set nocompatible
filetype off
set nu
set tabstop=4
set softtabstop=4
set shiftwidth=4
" set cursorline
set autoindent
set noexpandtab
" set incsearch
" always show status bar
set laststatus=2
" set ruler
" enable clipboard 
" set clipboard=unnamedplus


"===================插件配置===========================
" set the runtime path to include Vundle and initialize
set rtp+=/data/vim/plugs/bundle/Vundle.vim

call vundle#begin('/data/vim/plugs/bundle')

Plugin 'VundleVim/Vundle.vim'

Plugin 'Valloric/YouCompleteMe'

Plugin 'preservim/nerdtree'

Plugin 'suan/vim-instant-markdown', {'rtp':'after'}

Plugin 'itchyny/lightline.vim'

call vundle#end() 

filetype plugin indent on   
" 必须 加载vim自带和插件相应的语法和文件类型相关脚本，忽视插件改变缩进,可以使用以下替代
"filetype plugin on
"*******************************************************/



"/*****************************************补全配置**************************************
" 自动补全配置
set completeopt=longest,menu    "让Vim的补全菜单行为与一般IDE一致(参考VimTip1228)
autocmd InsertLeave * if pumvisible() == 0|pclose|endif "离开插入模式后自动关闭预览窗口
"回车即选中当前项
inoremap <expr> <CR>       pumvisible() ? "\<C-y>" : "\<CR>"
"上下左右键的行为 会显示其他信息
inoremap <expr> <Down>     pumvisible() ? "\<C-n>" : "\<Down>"
inoremap <expr> <Up>       pumvisible() ? "\<C-p>" : "\<Up>"
inoremap <expr> <PageDown> pumvisible() ? "\<PageDown>\<C-p>\<C-n>" : "\<PageDown>"
inoremap <expr> <PageUp>   pumvisible() ? "\<PageUp>\<C-p>\<C-n>" : "\<PageUp>"

let g:ycm_key_list_select_completion = ['<Down>']
let g:ycm_key_list_previous_completion = ['<Up>']
let g:ycm_global_ycm_extra_conf = "/data/vim/plugs/bundle/YouCompleteMe/third_party/ycmd/.ycm_extra_conf.py"
let g:ycm_collect_identifiers_from_tags_files=1 " 开启 YCM 基于标签引擎
let g:ycm_min_num_of_chars_for_completion=1 " 从第1个键入字符就开始罗列匹配项
let g:ycm_cache_omnifunc=0  " 禁止缓存匹配项,每次都重新生成匹配项
let g:ycm_seed_identifiers_with_syntax=1    " 语法关键字补全

"在注释输入中也能补全
let g:ycm_complete_in_comments = 1
"在字符串输入中也能补全
let g:ycm_complete_in_strings = 1
"注释和字符串中的文字也会被收入补全
let g:ycm_collect_identifiers_from_comments_and_strings = 0
"关闭语法错误检测提示
let g:ycm_enable_diagnostic_signs=0
let g:ycm_enable_diagnostic_highlighting=0

"**************************************************************************************/

"/*****************markdonw预览插件配置******************
let g:instant_markdown_browser = "firefox --new-window"
let g:instant_markdown_logfile = '/tmp/instant_markdown.log'
let g:instant_markdown_port = 7777
"*******************************************************/



"/*****************NERDTree配置**************************
map <F3> :NERDTreeMirror<CR>
map <F3> :NERDTreeToggle<CR>
"打开vim自动打开nerdtree
"autocmd VimEnter * NERDTree
"********************************************************/






"/***********************主题配置************************
if &term != "linux"
	set termguicolors
endif

colorscheme onedark

let g:lightline = {"colorscheme": "onedark",}
let g:airline = "onedark"
"*******************************************************/
